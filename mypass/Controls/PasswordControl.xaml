<UserControl x:Class="mypass.Controls.PasswordControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:bh="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:mypass.Controls"
             mc:Ignorable="d" 
             d:DesignWidth="800"
             Margin="0 0 0 10">

    <bh:Interaction.Triggers>
        <bh:EventTrigger EventName="MouseEnter">
            <bh:InvokeCommandAction Command="{Binding visual.ClickCommand}"/>
        </bh:EventTrigger>
        <bh:EventTrigger EventName="MouseLeave">
            <bh:InvokeCommandAction Command="{Binding visual.ClickCommand}"/>
        </bh:EventTrigger>
        <bh:EventTrigger EventName="Loaded">
            <bh:InvokeCommandAction Command="{Binding visual.OnLoadedCommand}"/>
        </bh:EventTrigger>
    </bh:Interaction.Triggers>

    <UserControl.Resources>
        <ResourceDictionary>
            <Style TargetType="md:Card" x:Key="Main">
                <Setter Property="Background" Value="White"/>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="MouseEnter">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="(md:Card.Background).(SolidColorBrush.Color)"
                                                    To="#ededed"
                                                    Duration="0:0:0:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="(md:Card.Background).(SolidColorBrush.Color)"
                                                    To="White"
                                                    Duration="0:0:0:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <md:Card Height="50" Style="{StaticResource Main}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid.Resources>
                <ResourceDictionary>
                    <Style TargetType="Button" x:Key="Transparent" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Opacity" Value="0.5"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Padding" Value="0"/>
                    </Style>
                </ResourceDictionary>
            </Grid.Resources>

            <Border BorderThickness="0.5"
                    BorderBrush="{Binding visual.NameBorderBrush}"
                    CornerRadius="5">
                
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1.5*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>

                    <Border Background="{Binding visual.MarkBrush}"
                            Grid.RowSpan="2"
                            CornerRadius="5 0 0 5"/>

                    <TextBlock Text="Название"
                               FontSize="11"
                               Margin="10 0 0 0"
                               Opacity="0.5"
                               VerticalAlignment="Center"
                               Grid.Row="0"
                               Grid.Column="1"/>

                    <TextBlock Text="{Binding visual.Name}"
                               VerticalAlignment="Center"
                               Margin="10 0 10 0"
                               Grid.RowSpan="2"
                               Grid.Column="1"/>

                    <TextBlock Text="{Binding visual.ChangedDate}"
                               ToolTip="Последняя дата изменения"
                               Grid.Column="2"
                               Grid.RowSpan="2"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Bottom"
                               FontSize="10"
                               Margin="10 5"
                               Opacity="0.5"/>

                </Grid>
                
            </Border>


            <StackPanel Grid.Column="1"
                        Orientation="Horizontal">

                <StackPanel.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource Transparent}">
                        <Setter Property="Width" Value="50"/>
                    </Style>
                    <Style TargetType="md:PopupBox">
                        <Setter Property="Width" Value="50"/>
                    </Style>
                </StackPanel.Resources>

                <StackPanel Grid.Column="1"
                            Orientation="Horizontal"
                            Visibility="{Binding visual.ButtonsVisibility}"
                            x:Name="AnimStackPanel"
                            Width="0">

                    <Button Grid.Column="0"
                            Content="{md:PackIcon Kind=ContentCopy}"
                            ToolTip="Скопировать пароль"
                            Command="{Binding func.ToClipboardCommand}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource Transparent}">
                                <Setter Property="Width" Value="50"/>
                                <Style.Triggers>
                                    <EventTrigger RoutedEvent="Click">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                                                    To="LightGreen"
                                                                    Duration="0:0:0:0.2"
                                                                    AutoReverse="True"/>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                     To="1"
                                                                     Duration="0:0:0:0.2"
                                                                     AutoReverse="True"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <md:PopupBox ToolTip="Изменить цвет"
                                 Opacity="0.5"
                                 HorizontalAlignment="Stretch"
                                 HorizontalContentAlignment="Center"
                                 VerticalAlignment="Stretch"
                                 PlacementMode="LeftAndAlignMiddles">
                        <md:PopupBox.ToggleContent>
                            <md:PackIcon Kind="InvertColors"/>
                        </md:PopupBox.ToggleContent>

                        <StackPanel Orientation="Horizontal"
                                    Margin="10 0">
                            <StackPanel.Resources>
                                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                                    <Setter Property="Height" Value="25"/>
                                    <Setter Property="Width" Value="25"/>
                                    <Setter Property="Margin" Value="5 5"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                </Style>
                            </StackPanel.Resources>

                            <Button Background="#ffffff"
                                    Command="{Binding visual.PickColorCommand}"
                                    CommandParameter="White"/>
                            <Button Background="#ec6969"
                                    Command="{Binding visual.PickColorCommand}"
                                    CommandParameter="Red"/>
                            <Button Background="#6892ed"
                                    Command="{Binding visual.PickColorCommand}"
                                    CommandParameter="Blue"/>
                            <Button Background="#3dff7f"
                                    Command="{Binding visual.PickColorCommand}"
                                    CommandParameter="Green"/>
                            <Button Background="#ebe175"
                                    Command="{Binding visual.PickColorCommand}"
                                    CommandParameter="Yellow"/>
                            <Button Background="#ac75eb"
                                    Command="{Binding visual.PickColorCommand}"
                                    CommandParameter="Purple"/>
                            
                        </StackPanel>

                    </md:PopupBox>
                    
                    <md:PopupBox Grid.Column="1"
                                 Content="{md:PackIcon Kind=Pencil}"
                                 ToolTip="Переместить"
                                 Opacity="0.5"
                                 HorizontalAlignment="Stretch"
                                 HorizontalContentAlignment="Center"
                                 VerticalAlignment="Stretch"
                                 PlacementMode="LeftAndAlignMiddles">
                        <md:PopupBox.ToggleContent>
                            <md:PackIcon Kind="ArrowUpDown"/>
                        </md:PopupBox.ToggleContent>

                        <StackPanel Width="50">

                            <Button Content="{md:PackIcon Kind=ArrowUp}"
                                    Style="{StaticResource Transparent}"
                                    Command="{Binding func.MoveUpCommand}"/>

                            <Button Content="{md:PackIcon Kind=ArrowDown}"
                                    Style="{StaticResource Transparent}"
                                    Command="{Binding func.MoveDownCommand}"/>

                        </StackPanel>

                    </md:PopupBox>

                    <Button Grid.Column="2"
                            Content="{md:PackIcon Kind=Delete}"
                            ToolTip="Удалить пароль"
                            Command="{Binding func.RemoveCommand}"/>

                </StackPanel>

                <md:PopupBox Grid.Column="3"
                             Content="{md:PackIcon Kind=Pencil}"
                             ToolTip="Редактировать"
                             Opacity="0.5"
                             StaysOpen="True"
                             IsPopupOpen="{Binding edit.IsOpen}"  
                             HorizontalAlignment="Stretch"
                             HorizontalContentAlignment="Center"
                             VerticalAlignment="Stretch"
                             PlacementMode="LeftAndAlignMiddles">
                    <md:PopupBox.ToggleContent>
                        <md:PackIcon Kind="Pencil"/>
                    </md:PopupBox.ToggleContent>

                    <StackPanel Margin="10"
                            MinWidth="250">

                        <TextBlock Text="Изменить"
                               HorizontalAlignment="Center"/>

                        <PasswordBox md:HintAssist.HelperText="Не меньше 8 символов"
                                     md:HintAssist.Hint="Пароль"
                                     md:PasswordBoxAssist.Password="{Binding Password2, Mode=TwoWay}"
                                     md:TextFieldAssist.HasClearButton="True"
                                     Style="{StaticResource MaterialDesignFloatingHintRevealPasswordBox}"
                                     Margin="10 10 10 0"
                                     x:Name="EditPasswordBox">
                            <bh:Interaction.Triggers>
                                <bh:EventTrigger EventName="PasswordChanged">
                                    <bh:InvokeCommandAction Command="{Binding edit.PasswordChangedCommand}"
                                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=PasswordBox}}"/>
                                </bh:EventTrigger>
                            </bh:Interaction.Triggers>
                        </PasswordBox>

                        <TextBox md:HintAssist.Hint="Название"
                                 Margin="10 20 10 0"
                                 Text="{Binding edit.Name, UpdateSourceTrigger=PropertyChanged}">
                            <md:HintAssist.HelperText>Например "Gmail", "Vk" или "Рабочий"</md:HintAssist.HelperText>
                        </TextBox>

                        <Button Content="Применить"
                                Style="{StaticResource MaterialDesignRaisedButton}"
                                Margin="10 25 10 0"
                                IsEnabled="{Binding edit.CanApply}"
                                Command="{Binding edit.ApplyCommand}"/>

                    </StackPanel>

                </md:PopupBox>

            </StackPanel>
            
        </Grid>
        
    </md:Card>
    
</UserControl>
